{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nvar _excluded = [\"numColumns\", \"columnWrapperStyle\", \"removeClippedSubviews\"];\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport Platform from '../../../exports/Platform';\nimport deepDiffer from '../deepDiffer';\nimport * as React from 'react';\nimport View from '../../../exports/View';\nimport VirtualizedList from '../VirtualizedList';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport invariant from 'fbjs/lib/invariant';\nimport { keyExtractor as defaultKeyExtractor } from '../VirtualizeUtils';\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// removeClippedSubviewsOrDefault(this.props.removeClippedSubviews)\nfunction removeClippedSubviewsOrDefault(removeClippedSubviews) {\n  return removeClippedSubviews !== null && removeClippedSubviews !== void 0 ? removeClippedSubviews : Platform.OS === 'android';\n}\n\n// numColumnsOrDefault(this.props.numColumns)\nfunction numColumnsOrDefault(numColumns) {\n  return numColumns !== null && numColumns !== void 0 ? numColumns : 1;\n}\n/**\n * A performant interface for rendering simple, flat lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Optional horizontal mode.\n *  - Configurable viewability callbacks.\n *  - Header support.\n *  - Footer support.\n *  - Separator support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *  - ScrollToIndex support.\n *\n * If you need section support, use [`<SectionList>`](docs/sectionlist.html).\n *\n * Minimal Example:\n *\n *     <FlatList\n *       data={[{key: 'a'}, {key: 'b'}]}\n *       renderItem={({item}) => <Text>{item.key}</Text>}\n *     />\n *\n * More complex, multi-select example demonstrating `PureComponent` usage for perf optimization and avoiding bugs.\n *\n * - By binding the `onPressItem` handler, the props will remain `===` and `PureComponent` will\n *   prevent wasteful re-renders unless the actual `id`, `selected`, or `title` props change, even\n *   if the components rendered in `MyListItem` did not have such optimizations.\n * - By passing `extraData={this.state}` to `FlatList` we make sure `FlatList` itself will re-render\n *   when the `state.selected` changes. Without setting this prop, `FlatList` would not know it\n *   needs to re-render any items because it is also a `PureComponent` and the prop comparison will\n *   not show any changes.\n * - `keyExtractor` tells the list to use the `id`s for the react keys instead of the default `key` property.\n *\n *\n *     class MyListItem extends React.PureComponent {\n *       _onPress = () => {\n *         this.props.onPressItem(this.props.id);\n *       };\n *\n *       render() {\n *         const textColor = this.props.selected ? \"red\" : \"black\";\n *         return (\n *           <TouchableOpacity onPress={this._onPress}>\n *             <View>\n *               <Text style={{ color: textColor }}>\n *                 {this.props.title}\n *               </Text>\n *             </View>\n *           </TouchableOpacity>\n *         );\n *       }\n *     }\n *\n *     class MultiSelectList extends React.PureComponent {\n *       state = {selected: (new Map(): Map<string, boolean>)};\n *\n *       _keyExtractor = (item, index) => item.id;\n *\n *       _onPressItem = (id: string) => {\n *         // updater functions are preferred for transactional updates\n *         this.setState((state) => {\n *           // copy the map rather than modifying state.\n *           const selected = new Map(state.selected);\n *           selected.set(id, !selected.get(id)); // toggle\n *           return {selected};\n *         });\n *       };\n *\n *       _renderItem = ({item}) => (\n *         <MyListItem\n *           id={item.id}\n *           onPressItem={this._onPressItem}\n *           selected={!!this.state.selected.get(item.id)}\n *           title={item.title}\n *         />\n *       );\n *\n *       render() {\n *         return (\n *           <FlatList\n *             data={this.props.data}\n *             extraData={this.state}\n *             keyExtractor={this._keyExtractor}\n *             renderItem={this._renderItem}\n *           />\n *         );\n *       }\n *     }\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist.html),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n * Also inherits [ScrollView Props](docs/scrollview.html#props), unless it is nested in another FlatList of same orientation.\n */\nclass FlatList extends React.PureComponent {\n  /**\n   * Scrolls to the end of the content. May be janky without `getItemLayout` prop.\n   */\n  scrollToEnd(params) {\n    if (this._listRef) {\n      this._listRef.scrollToEnd(params);\n    }\n  }\n\n  /**\n   * Scrolls to the item at the specified index such that it is positioned in the viewable area\n   * such that `viewPosition` 0 places it at the top, 1 at the bottom, and 0.5 centered in the\n   * middle. `viewOffset` is a fixed number of pixels to offset the final target position.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToIndex(params) {\n    if (this._listRef) {\n      this._listRef.scrollToIndex(params);\n    }\n  }\n\n  /**\n   * Requires linear scan through data - use `scrollToIndex` instead if possible.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToItem(params) {\n    if (this._listRef) {\n      this._listRef.scrollToItem(params);\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Check out [scrollToOffset](docs/virtualizedlist.html#scrolltooffset) of VirtualizedList\n   */\n  scrollToOffset(params) {\n    if (this._listRef) {\n      this._listRef.scrollToOffset(params);\n    }\n  }\n\n  /**\n   * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n   * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n   * taps on items or by navigation actions.\n   */\n  recordInteraction() {\n    if (this._listRef) {\n      this._listRef.recordInteraction();\n    }\n  }\n\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n  flashScrollIndicators() {\n    if (this._listRef) {\n      this._listRef.flashScrollIndicators();\n    }\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   */\n  getScrollResponder() {\n    if (this._listRef) {\n      return this._listRef.getScrollResponder();\n    }\n  }\n\n  /**\n   * Provides a reference to the underlying host component\n   */\n  getNativeScrollRef() {\n    if (this._listRef) {\n      /* $FlowFixMe[incompatible-return] Suppresses errors found when fixing\n       * TextInput typing */\n      return this._listRef.getScrollRef();\n    }\n  }\n  getScrollableNode() {\n    if (this._listRef) {\n      return this._listRef.getScrollableNode();\n    }\n  }\n  constructor(_props) {\n    super(_props);\n    this._virtualizedListPairs = [];\n    this._captureRef = ref => {\n      this._listRef = ref;\n    };\n    this._getItem = (data, index) => {\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      if (numColumns > 1) {\n        var ret = [];\n        for (var kk = 0; kk < numColumns; kk++) {\n          var _item = data[index * numColumns + kk];\n          if (_item != null) {\n            ret.push(_item);\n          }\n        }\n        return ret;\n      } else {\n        return data[index];\n      }\n    };\n    this._getItemCount = data => {\n      if (data) {\n        var numColumns = numColumnsOrDefault(this.props.numColumns);\n        return numColumns > 1 ? Math.ceil(data.length / numColumns) : data.length;\n      } else {\n        return 0;\n      }\n    };\n    this._keyExtractor = (items, index) => {\n      var _this$props$keyExtrac;\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      var keyExtractor = (_this$props$keyExtrac = this.props.keyExtractor) !== null && _this$props$keyExtrac !== void 0 ? _this$props$keyExtrac : defaultKeyExtractor;\n      if (numColumns > 1) {\n        if (Array.isArray(items)) {\n          return items.map((item, kk) => keyExtractor(item, index * numColumns + kk)).join(':');\n        } else {\n          invariant(Array.isArray(items), 'FlatList: Encountered internal consistency error, expected each item to consist of an ' + 'array with 1-%s columns; instead, received a single item.', numColumns);\n        }\n      } else {\n        // $FlowFixMe[incompatible-call] Can't call keyExtractor with an array\n        return keyExtractor(items, index);\n      }\n    };\n    this._renderer = () => {\n      var _this$props = this.props,\n        ListItemComponent = _this$props.ListItemComponent,\n        renderItem = _this$props.renderItem,\n        columnWrapperStyle = _this$props.columnWrapperStyle;\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      var virtualizedListRenderKey = ListItemComponent ? 'ListItemComponent' : 'renderItem';\n      var renderer = props => {\n        if (ListItemComponent) {\n          // $FlowFixMe[not-a-component] Component isn't valid\n          // $FlowFixMe[incompatible-type-arg] Component isn't valid\n          // $FlowFixMe[incompatible-return] Component isn't valid\n          return /*#__PURE__*/React.createElement(ListItemComponent, props);\n        } else if (renderItem) {\n          // $FlowFixMe[incompatible-call]\n          return renderItem(props);\n        } else {\n          return null;\n        }\n      };\n      return {\n        /* $FlowFixMe[invalid-computed-prop] (>=0.111.0 site=react_native_fb)\n         * This comment suppresses an error found when Flow v0.111 was deployed.\n         * To see the error, delete this comment and run Flow. */\n        [virtualizedListRenderKey]: info => {\n          if (numColumns > 1) {\n            var _item2 = info.item,\n              _index = info.index;\n            invariant(Array.isArray(_item2), 'Expected array of items with numColumns > 1');\n            return /*#__PURE__*/React.createElement(View, {\n              style: [styles.row, columnWrapperStyle]\n            }, _item2.map((it, kk) => {\n              var element = renderer({\n                item: it,\n                index: _index * numColumns + kk,\n                separators: info.separators\n              });\n              return element != null ? /*#__PURE__*/React.createElement(React.Fragment, {\n                key: kk\n              }, element) : null;\n            }));\n          } else {\n            return renderer(info);\n          }\n        }\n      };\n    };\n    this._checkProps(this.props);\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._virtualizedListPairs = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityConfig: pair.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(pair.onViewableItemsChanged)\n      }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._virtualizedListPairs.push({\n        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.63 was deployed. To\n         * see the error delete this comment and run Flow. */\n        viewabilityConfig: this.props.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(this.props.onViewableItemsChanged)\n      });\n    }\n  }\n  componentDidUpdate(prevProps) {\n    invariant(prevProps.numColumns === this.props.numColumns, 'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' + 'changing the number of columns to force a fresh render of the component.');\n    invariant(prevProps.onViewableItemsChanged === this.props.onViewableItemsChanged, 'Changing onViewableItemsChanged on the fly is not supported');\n    invariant(!deepDiffer(prevProps.viewabilityConfig, this.props.viewabilityConfig), 'Changing viewabilityConfig on the fly is not supported');\n    invariant(prevProps.viewabilityConfigCallbackPairs === this.props.viewabilityConfigCallbackPairs, 'Changing viewabilityConfigCallbackPairs on the fly is not supported');\n    this._checkProps(this.props);\n  }\n  _checkProps(props) {\n    var getItem = props.getItem,\n      getItemCount = props.getItemCount,\n      horizontal = props.horizontal,\n      columnWrapperStyle = props.columnWrapperStyle,\n      onViewableItemsChanged = props.onViewableItemsChanged,\n      viewabilityConfigCallbackPairs = props.viewabilityConfigCallbackPairs;\n    var numColumns = numColumnsOrDefault(this.props.numColumns);\n    invariant(!getItem && !getItemCount, 'FlatList does not support custom data formats.');\n    if (numColumns > 1) {\n      invariant(!horizontal, 'numColumns does not support horizontal.');\n    } else {\n      invariant(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');\n    }\n    invariant(!(onViewableItemsChanged && viewabilityConfigCallbackPairs), 'FlatList does not support setting both onViewableItemsChanged and ' + 'viewabilityConfigCallbackPairs.');\n  }\n  _pushMultiColumnViewable(arr, v) {\n    var _this$props$keyExtrac2;\n    var numColumns = numColumnsOrDefault(this.props.numColumns);\n    var keyExtractor = (_this$props$keyExtrac2 = this.props.keyExtractor) !== null && _this$props$keyExtrac2 !== void 0 ? _this$props$keyExtrac2 : defaultKeyExtractor;\n    v.item.forEach((item, ii) => {\n      invariant(v.index != null, 'Missing index!');\n      var index = v.index * numColumns + ii;\n      arr.push(_objectSpread(_objectSpread({}, v), {}, {\n        item,\n        key: keyExtractor(item, index),\n        index\n      }));\n    });\n  }\n  _createOnViewableItemsChanged(onViewableItemsChanged) {\n    return info => {\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      if (onViewableItemsChanged) {\n        if (numColumns > 1) {\n          var changed = [];\n          var viewableItems = [];\n          info.viewableItems.forEach(v => this._pushMultiColumnViewable(viewableItems, v));\n          info.changed.forEach(v => this._pushMultiColumnViewable(changed, v));\n          onViewableItemsChanged({\n            viewableItems,\n            changed\n          });\n        } else {\n          onViewableItemsChanged(info);\n        }\n      }\n    };\n  }\n  render() {\n    var _this$props2 = this.props,\n      numColumns = _this$props2.numColumns,\n      columnWrapperStyle = _this$props2.columnWrapperStyle,\n      _removeClippedSubviews = _this$props2.removeClippedSubviews,\n      restProps = _objectWithoutPropertiesLoose(_this$props2, _excluded);\n    return /*#__PURE__*/React.createElement(VirtualizedList, _extends({}, restProps, {\n      getItem: this._getItem,\n      getItemCount: this._getItemCount,\n      keyExtractor: this._keyExtractor,\n      ref: this._captureRef,\n      viewabilityConfigCallbackPairs: this._virtualizedListPairs,\n      removeClippedSubviews: removeClippedSubviewsOrDefault(_removeClippedSubviews)\n    }, this._renderer()));\n  }\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  }\n});\nexport default FlatList;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_objectSpread","_excluded","Platform","deepDiffer","React","View","VirtualizedList","StyleSheet","invariant","keyExtractor","defaultKeyExtractor","removeClippedSubviewsOrDefault","removeClippedSubviews","OS","numColumnsOrDefault","numColumns","FlatList","PureComponent","scrollToEnd","params","_listRef","scrollToIndex","scrollToItem","scrollToOffset","recordInteraction","flashScrollIndicators","getScrollResponder","getNativeScrollRef","getScrollRef","getScrollableNode","constructor","_props","_virtualizedListPairs","_captureRef","ref","_getItem","data","index","props","ret","kk","_item","push","_getItemCount","Math","ceil","length","_keyExtractor","items","_this$props$keyExtrac","Array","isArray","map","item","join","_renderer","_this$props","ListItemComponent","renderItem","columnWrapperStyle","virtualizedListRenderKey","renderer","createElement","info","_item2","_index","style","styles","row","it","element","separators","Fragment","key","_checkProps","viewabilityConfigCallbackPairs","pair","viewabilityConfig","onViewableItemsChanged","_createOnViewableItemsChanged","componentDidUpdate","prevProps","getItem","getItemCount","horizontal","_pushMultiColumnViewable","arr","v","_this$props$keyExtrac2","forEach","ii","changed","viewableItems","render","_this$props2","_removeClippedSubviews","restProps","create","flexDirection"],"sources":["C:/Users/HP/Desktop/chebal/tranquilizer-/FRONTEND/node_modules/react-native-web/dist/vendor/react-native/FlatList/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nvar _excluded = [\"numColumns\", \"columnWrapperStyle\", \"removeClippedSubviews\"];\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport Platform from '../../../exports/Platform';\nimport deepDiffer from '../deepDiffer';\nimport * as React from 'react';\nimport View from '../../../exports/View';\nimport VirtualizedList from '../VirtualizedList';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport invariant from 'fbjs/lib/invariant';\nimport { keyExtractor as defaultKeyExtractor } from '../VirtualizeUtils';\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// removeClippedSubviewsOrDefault(this.props.removeClippedSubviews)\nfunction removeClippedSubviewsOrDefault(removeClippedSubviews) {\n  return removeClippedSubviews !== null && removeClippedSubviews !== void 0 ? removeClippedSubviews : Platform.OS === 'android';\n}\n\n// numColumnsOrDefault(this.props.numColumns)\nfunction numColumnsOrDefault(numColumns) {\n  return numColumns !== null && numColumns !== void 0 ? numColumns : 1;\n}\n/**\n * A performant interface for rendering simple, flat lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Optional horizontal mode.\n *  - Configurable viewability callbacks.\n *  - Header support.\n *  - Footer support.\n *  - Separator support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *  - ScrollToIndex support.\n *\n * If you need section support, use [`<SectionList>`](docs/sectionlist.html).\n *\n * Minimal Example:\n *\n *     <FlatList\n *       data={[{key: 'a'}, {key: 'b'}]}\n *       renderItem={({item}) => <Text>{item.key}</Text>}\n *     />\n *\n * More complex, multi-select example demonstrating `PureComponent` usage for perf optimization and avoiding bugs.\n *\n * - By binding the `onPressItem` handler, the props will remain `===` and `PureComponent` will\n *   prevent wasteful re-renders unless the actual `id`, `selected`, or `title` props change, even\n *   if the components rendered in `MyListItem` did not have such optimizations.\n * - By passing `extraData={this.state}` to `FlatList` we make sure `FlatList` itself will re-render\n *   when the `state.selected` changes. Without setting this prop, `FlatList` would not know it\n *   needs to re-render any items because it is also a `PureComponent` and the prop comparison will\n *   not show any changes.\n * - `keyExtractor` tells the list to use the `id`s for the react keys instead of the default `key` property.\n *\n *\n *     class MyListItem extends React.PureComponent {\n *       _onPress = () => {\n *         this.props.onPressItem(this.props.id);\n *       };\n *\n *       render() {\n *         const textColor = this.props.selected ? \"red\" : \"black\";\n *         return (\n *           <TouchableOpacity onPress={this._onPress}>\n *             <View>\n *               <Text style={{ color: textColor }}>\n *                 {this.props.title}\n *               </Text>\n *             </View>\n *           </TouchableOpacity>\n *         );\n *       }\n *     }\n *\n *     class MultiSelectList extends React.PureComponent {\n *       state = {selected: (new Map(): Map<string, boolean>)};\n *\n *       _keyExtractor = (item, index) => item.id;\n *\n *       _onPressItem = (id: string) => {\n *         // updater functions are preferred for transactional updates\n *         this.setState((state) => {\n *           // copy the map rather than modifying state.\n *           const selected = new Map(state.selected);\n *           selected.set(id, !selected.get(id)); // toggle\n *           return {selected};\n *         });\n *       };\n *\n *       _renderItem = ({item}) => (\n *         <MyListItem\n *           id={item.id}\n *           onPressItem={this._onPressItem}\n *           selected={!!this.state.selected.get(item.id)}\n *           title={item.title}\n *         />\n *       );\n *\n *       render() {\n *         return (\n *           <FlatList\n *             data={this.props.data}\n *             extraData={this.state}\n *             keyExtractor={this._keyExtractor}\n *             renderItem={this._renderItem}\n *           />\n *         );\n *       }\n *     }\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist.html),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n * Also inherits [ScrollView Props](docs/scrollview.html#props), unless it is nested in another FlatList of same orientation.\n */\nclass FlatList extends React.PureComponent {\n  /**\n   * Scrolls to the end of the content. May be janky without `getItemLayout` prop.\n   */\n  scrollToEnd(params) {\n    if (this._listRef) {\n      this._listRef.scrollToEnd(params);\n    }\n  }\n\n  /**\n   * Scrolls to the item at the specified index such that it is positioned in the viewable area\n   * such that `viewPosition` 0 places it at the top, 1 at the bottom, and 0.5 centered in the\n   * middle. `viewOffset` is a fixed number of pixels to offset the final target position.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToIndex(params) {\n    if (this._listRef) {\n      this._listRef.scrollToIndex(params);\n    }\n  }\n\n  /**\n   * Requires linear scan through data - use `scrollToIndex` instead if possible.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToItem(params) {\n    if (this._listRef) {\n      this._listRef.scrollToItem(params);\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Check out [scrollToOffset](docs/virtualizedlist.html#scrolltooffset) of VirtualizedList\n   */\n  scrollToOffset(params) {\n    if (this._listRef) {\n      this._listRef.scrollToOffset(params);\n    }\n  }\n\n  /**\n   * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n   * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n   * taps on items or by navigation actions.\n   */\n  recordInteraction() {\n    if (this._listRef) {\n      this._listRef.recordInteraction();\n    }\n  }\n\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n  flashScrollIndicators() {\n    if (this._listRef) {\n      this._listRef.flashScrollIndicators();\n    }\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   */\n  getScrollResponder() {\n    if (this._listRef) {\n      return this._listRef.getScrollResponder();\n    }\n  }\n\n  /**\n   * Provides a reference to the underlying host component\n   */\n  getNativeScrollRef() {\n    if (this._listRef) {\n      /* $FlowFixMe[incompatible-return] Suppresses errors found when fixing\n       * TextInput typing */\n      return this._listRef.getScrollRef();\n    }\n  }\n  getScrollableNode() {\n    if (this._listRef) {\n      return this._listRef.getScrollableNode();\n    }\n  }\n  constructor(_props) {\n    super(_props);\n    this._virtualizedListPairs = [];\n    this._captureRef = ref => {\n      this._listRef = ref;\n    };\n    this._getItem = (data, index) => {\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      if (numColumns > 1) {\n        var ret = [];\n        for (var kk = 0; kk < numColumns; kk++) {\n          var _item = data[index * numColumns + kk];\n          if (_item != null) {\n            ret.push(_item);\n          }\n        }\n        return ret;\n      } else {\n        return data[index];\n      }\n    };\n    this._getItemCount = data => {\n      if (data) {\n        var numColumns = numColumnsOrDefault(this.props.numColumns);\n        return numColumns > 1 ? Math.ceil(data.length / numColumns) : data.length;\n      } else {\n        return 0;\n      }\n    };\n    this._keyExtractor = (items, index) => {\n      var _this$props$keyExtrac;\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      var keyExtractor = (_this$props$keyExtrac = this.props.keyExtractor) !== null && _this$props$keyExtrac !== void 0 ? _this$props$keyExtrac : defaultKeyExtractor;\n      if (numColumns > 1) {\n        if (Array.isArray(items)) {\n          return items.map((item, kk) => keyExtractor(item, index * numColumns + kk)).join(':');\n        } else {\n          invariant(Array.isArray(items), 'FlatList: Encountered internal consistency error, expected each item to consist of an ' + 'array with 1-%s columns; instead, received a single item.', numColumns);\n        }\n      } else {\n        // $FlowFixMe[incompatible-call] Can't call keyExtractor with an array\n        return keyExtractor(items, index);\n      }\n    };\n    this._renderer = () => {\n      var _this$props = this.props,\n        ListItemComponent = _this$props.ListItemComponent,\n        renderItem = _this$props.renderItem,\n        columnWrapperStyle = _this$props.columnWrapperStyle;\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      var virtualizedListRenderKey = ListItemComponent ? 'ListItemComponent' : 'renderItem';\n      var renderer = props => {\n        if (ListItemComponent) {\n          // $FlowFixMe[not-a-component] Component isn't valid\n          // $FlowFixMe[incompatible-type-arg] Component isn't valid\n          // $FlowFixMe[incompatible-return] Component isn't valid\n          return /*#__PURE__*/React.createElement(ListItemComponent, props);\n        } else if (renderItem) {\n          // $FlowFixMe[incompatible-call]\n          return renderItem(props);\n        } else {\n          return null;\n        }\n      };\n      return {\n        /* $FlowFixMe[invalid-computed-prop] (>=0.111.0 site=react_native_fb)\n         * This comment suppresses an error found when Flow v0.111 was deployed.\n         * To see the error, delete this comment and run Flow. */\n        [virtualizedListRenderKey]: info => {\n          if (numColumns > 1) {\n            var _item2 = info.item,\n              _index = info.index;\n            invariant(Array.isArray(_item2), 'Expected array of items with numColumns > 1');\n            return /*#__PURE__*/React.createElement(View, {\n              style: [styles.row, columnWrapperStyle]\n            }, _item2.map((it, kk) => {\n              var element = renderer({\n                item: it,\n                index: _index * numColumns + kk,\n                separators: info.separators\n              });\n              return element != null ? /*#__PURE__*/React.createElement(React.Fragment, {\n                key: kk\n              }, element) : null;\n            }));\n          } else {\n            return renderer(info);\n          }\n        }\n      };\n    };\n    this._checkProps(this.props);\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._virtualizedListPairs = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityConfig: pair.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(pair.onViewableItemsChanged)\n      }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._virtualizedListPairs.push({\n        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.63 was deployed. To\n         * see the error delete this comment and run Flow. */\n        viewabilityConfig: this.props.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(this.props.onViewableItemsChanged)\n      });\n    }\n  }\n  componentDidUpdate(prevProps) {\n    invariant(prevProps.numColumns === this.props.numColumns, 'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' + 'changing the number of columns to force a fresh render of the component.');\n    invariant(prevProps.onViewableItemsChanged === this.props.onViewableItemsChanged, 'Changing onViewableItemsChanged on the fly is not supported');\n    invariant(!deepDiffer(prevProps.viewabilityConfig, this.props.viewabilityConfig), 'Changing viewabilityConfig on the fly is not supported');\n    invariant(prevProps.viewabilityConfigCallbackPairs === this.props.viewabilityConfigCallbackPairs, 'Changing viewabilityConfigCallbackPairs on the fly is not supported');\n    this._checkProps(this.props);\n  }\n  _checkProps(props) {\n    var getItem = props.getItem,\n      getItemCount = props.getItemCount,\n      horizontal = props.horizontal,\n      columnWrapperStyle = props.columnWrapperStyle,\n      onViewableItemsChanged = props.onViewableItemsChanged,\n      viewabilityConfigCallbackPairs = props.viewabilityConfigCallbackPairs;\n    var numColumns = numColumnsOrDefault(this.props.numColumns);\n    invariant(!getItem && !getItemCount, 'FlatList does not support custom data formats.');\n    if (numColumns > 1) {\n      invariant(!horizontal, 'numColumns does not support horizontal.');\n    } else {\n      invariant(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');\n    }\n    invariant(!(onViewableItemsChanged && viewabilityConfigCallbackPairs), 'FlatList does not support setting both onViewableItemsChanged and ' + 'viewabilityConfigCallbackPairs.');\n  }\n  _pushMultiColumnViewable(arr, v) {\n    var _this$props$keyExtrac2;\n    var numColumns = numColumnsOrDefault(this.props.numColumns);\n    var keyExtractor = (_this$props$keyExtrac2 = this.props.keyExtractor) !== null && _this$props$keyExtrac2 !== void 0 ? _this$props$keyExtrac2 : defaultKeyExtractor;\n    v.item.forEach((item, ii) => {\n      invariant(v.index != null, 'Missing index!');\n      var index = v.index * numColumns + ii;\n      arr.push(_objectSpread(_objectSpread({}, v), {}, {\n        item,\n        key: keyExtractor(item, index),\n        index\n      }));\n    });\n  }\n  _createOnViewableItemsChanged(onViewableItemsChanged) {\n    return info => {\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      if (onViewableItemsChanged) {\n        if (numColumns > 1) {\n          var changed = [];\n          var viewableItems = [];\n          info.viewableItems.forEach(v => this._pushMultiColumnViewable(viewableItems, v));\n          info.changed.forEach(v => this._pushMultiColumnViewable(changed, v));\n          onViewableItemsChanged({\n            viewableItems,\n            changed\n          });\n        } else {\n          onViewableItemsChanged(info);\n        }\n      }\n    };\n  }\n  render() {\n    var _this$props2 = this.props,\n      numColumns = _this$props2.numColumns,\n      columnWrapperStyle = _this$props2.columnWrapperStyle,\n      _removeClippedSubviews = _this$props2.removeClippedSubviews,\n      restProps = _objectWithoutPropertiesLoose(_this$props2, _excluded);\n    return /*#__PURE__*/React.createElement(VirtualizedList, _extends({}, restProps, {\n      getItem: this._getItem,\n      getItemCount: this._getItemCount,\n      keyExtractor: this._keyExtractor,\n      ref: this._captureRef,\n      viewabilityConfigCallbackPairs: this._virtualizedListPairs,\n      removeClippedSubviews: removeClippedSubviewsOrDefault(_removeClippedSubviews)\n    }, this._renderer()));\n  }\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  }\n});\nexport default FlatList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}