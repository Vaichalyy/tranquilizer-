{"ast":null,"code":"import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport Batchinator from '../Batchinator';\nimport FillRateHelper from '../FillRateHelper';\nimport RefreshControl from '../../../exports/RefreshControl';\nimport ScrollView from '../../../exports/ScrollView';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport View from '../../../exports/View';\nimport ViewabilityHelper from '../ViewabilityHelper';\nvar flattenStyle = StyleSheet.flatten;\nimport infoLog from '../infoLog';\nimport invariant from 'fbjs/lib/invariant';\nimport { keyExtractor as defaultKeyExtractor, computeWindowedRenderLimits } from '../VirtualizeUtils';\nimport * as React from 'react';\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from './VirtualizedListContext.js';\nvar __DEV__ = process.env.NODE_ENV !== 'production';\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal) {\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\n}\n\n// initialNumToRenderOrDefault(this.props.initialNumToRenderOrDefault)\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\n}\n\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\n}\n\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\n}\n\n// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\n}\n\n// windowSizeOrDefault(this.props.windowSize)\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nclass VirtualizedList extends React.PureComponent {\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params) {\n    var animated = params ? params.animated : true;\n    var veryLast = this.props.getItemCount(this.props.data) - 1;\n    var frame = this._getFrameMetricsApprox(veryLast);\n    var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params) {\n    var _this$props = this.props,\n      data = _this$props.data,\n      horizontal = _this$props.horizontal,\n      getItemCount = _this$props.getItemCount,\n      getItemLayout = _this$props.getItemLayout,\n      onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n    var animated = params.animated,\n      index = params.index,\n      viewOffset = params.viewOffset,\n      viewPosition = params.viewPosition;\n    invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n    invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n    invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index\n      });\n      return;\n    }\n    var frame = this._getFrameMetricsApprox(index);\n    var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontal ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params) {\n    var item = params.item;\n    var _this$props2 = this.props,\n      data = _this$props2.data,\n      getItem = _this$props2.getItem,\n      getItemCount = _this$props2.getItemCount;\n    var itemCount = getItemCount(data);\n    for (var _index = 0; _index < itemCount; _index++) {\n      if (getItem(data, _index) === item) {\n        this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n          index: _index\n        }));\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params) {\n    var animated = params.animated,\n      offset = params.offset;\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props.data);\n  }\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n  getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return this._scrollRef;\n    }\n  }\n  getScrollRef() {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n  _getCellKey() {\n    var _this$context;\n    return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n  }\n  _getListKey() {\n    return this.props.listKey || this._getCellKey();\n  }\n  _getDebugInfo() {\n    var _this$context2;\n    return {\n      listKey: this._getListKey(),\n      cellKey: this._getCellKey(),\n      horizontal: horizontalOrDefault(this.props.horizontal),\n      parent: (_this$context2 = this.context) == null ? void 0 : _this$context2.debugInfo\n    };\n  }\n  hasMore() {\n    return this._hasMore;\n  }\n  constructor(_props) {\n    var _this$props$updateCel;\n    super(_props);\n    this._getScrollMetrics = () => {\n      return this._scrollMetrics;\n    };\n    this._getOutermostParentListRef = () => {\n      if (this._isNestedWithSameOrientation()) {\n        return this.context.getOutermostParentListRef();\n      } else {\n        return this;\n      }\n    };\n    this._getNestedChildState = key => {\n      var existingChildData = this._nestedChildLists.get(key);\n      return existingChildData && existingChildData.state;\n    };\n    this._registerAsNestedChild = childList => {\n      // Register the mapping between this child key and the cellKey for its cell\n      var childListsInCell = this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n      this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n      var existingChildData = this._nestedChildLists.get(childList.key);\n      if (existingChildData && existingChildData.ref !== null) {\n        console.error('A VirtualizedList contains a cell which itself contains ' + 'more than one VirtualizedList of the same orientation as the parent ' + 'list. You must pass a unique listKey prop to each sibling list.\\n\\n' + describeNestedLists(_objectSpread(_objectSpread({}, childList), {}, {\n          // We're called from the child's componentDidMount, so it's safe to\n          // read the child's props here (albeit weird).\n          horizontal: !!childList.ref.props.horizontal\n        })));\n      }\n      this._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n      if (this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n    this._unregisterAsNestedChild = childList => {\n      this._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n    this._onUpdateSeparators = (keys, newProps) => {\n      keys.forEach(key => {\n        var ref = key != null && this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n    this._getSpacerKey = isVertical => isVertical ? 'height' : 'width';\n    this._averageCellLength = 0;\n    this._cellKeysToChildListKeys = new Map();\n    this._cellRefs = {};\n    this._frames = {};\n    this._footerLength = 0;\n    this._hasDoneInitialScroll = false;\n    this._hasInteracted = false;\n    this._hasMore = false;\n    this._hasWarned = {};\n    this._headerLength = 0;\n    this._hiPriInProgress = false;\n    this._highestMeasuredFrameIndex = 0;\n    this._indicesToKeys = new Map();\n    this._nestedChildLists = new Map();\n    this._offsetFromParentVirtualizedList = 0;\n    this._prevParentOffset = 0;\n    this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    this._scrollRef = null;\n    this._sentEndForContentLength = 0;\n    this._totalCellLength = 0;\n    this._totalCellsMeasured = 0;\n    this._viewabilityTuples = [];\n    this._captureScrollRef = ref => {\n      this._scrollRef = ref;\n    };\n    this._defaultRenderScrollComponent = props => {\n      var onRefresh = props.onRefresh;\n      if (this._isNestedWithSameOrientation()) {\n        // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n        return /*#__PURE__*/React.createElement(View, props);\n      } else if (onRefresh) {\n        var _props$refreshing;\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : 'undefined') + '`');\n        return /*#__PURE__*/(\n          // $FlowFixMe[prop-missing] Invalid prop usage\n          React.createElement(ScrollView, _extends({}, props, {\n            refreshControl: props.refreshControl == null ? /*#__PURE__*/React.createElement(RefreshControl, {\n              refreshing: props.refreshing,\n              onRefresh: onRefresh,\n              progressViewOffset: props.progressViewOffset\n            }) : props.refreshControl\n          }))\n        );\n      } else {\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        return /*#__PURE__*/React.createElement(ScrollView, props);\n      }\n    };\n    this._onCellUnmount = cellKey => {\n      var curr = this._frames[cellKey];\n      if (curr) {\n        this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n    this._onLayout = e => {\n      if (this._isNestedWithSameOrientation()) {\n        // Need to adjust our scroll metrics to be relative to our containing\n        // VirtualizedList before we can make claims about list item viewability\n        this.measureLayoutRelativeToContainingList();\n      } else {\n        this._scrollMetrics.visibleLength = this._selectLength(e.nativeEvent.layout);\n      }\n      this.props.onLayout && this.props.onLayout(e);\n      this._scheduleCellsToRenderUpdate();\n      this._maybeCallOnEndReached();\n    };\n    this._onLayoutEmpty = e => {\n      this.props.onLayout && this.props.onLayout(e);\n    };\n    this._onLayoutFooter = e => {\n      this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n      this._footerLength = this._selectLength(e.nativeEvent.layout);\n    };\n    this._onLayoutHeader = e => {\n      this._headerLength = this._selectLength(e.nativeEvent.layout);\n    };\n    this._onContentSizeChange = (width, height) => {\n      if (width > 0 && height > 0 && this.props.initialScrollIndex != null && this.props.initialScrollIndex > 0 && !this._hasDoneInitialScroll) {\n        if (this.props.contentOffset == null) {\n          this.scrollToIndex({\n            animated: false,\n            index: this.props.initialScrollIndex\n          });\n        }\n        this._hasDoneInitialScroll = true;\n      }\n      if (this.props.onContentSizeChange) {\n        this.props.onContentSizeChange(width, height);\n      }\n      this._scrollMetrics.contentLength = this._selectLength({\n        height,\n        width\n      });\n      this._scheduleCellsToRenderUpdate();\n      this._maybeCallOnEndReached();\n    };\n    this._convertParentScrollMetrics = metrics => {\n      // Offset of the top of the nested list relative to the top of its parent's viewport\n      var offset = metrics.offset - this._offsetFromParentVirtualizedList;\n      // Child's visible length is the same as its parent's\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - this._scrollMetrics.offset;\n      var contentLength = this._scrollMetrics.contentLength;\n      return {\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset\n      };\n    };\n    this._onScroll = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScroll(e);\n      });\n      if (this.props.onScroll) {\n        this.props.onScroll(e);\n      }\n      var timestamp = e.timeStamp;\n      var visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n      var contentLength = this._selectLength(e.nativeEvent.contentSize);\n      var offset = this._selectOffset(e.nativeEvent.contentOffset);\n      var dOffset = offset - this._scrollMetrics.offset;\n      if (this._isNestedWithSameOrientation()) {\n        if (this._scrollMetrics.contentLength === 0) {\n          // Ignore scroll events until onLayout has been called and we\n          // know our offset from our offset from our parent\n          return;\n        }\n        var _this$_convertParentS = this._convertParentScrollMetrics({\n          visibleLength,\n          offset\n        });\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n      var dt = this._scrollMetrics.timestamp ? Math.max(1, timestamp - this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n      if (dt > 500 && this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt,\n          prevDt: this._scrollMetrics.dt,\n          contentLength\n        });\n        this._hasWarned.perf = true;\n      }\n      this._scrollMetrics = {\n        contentLength,\n        dt,\n        dOffset,\n        offset,\n        timestamp,\n        velocity,\n        visibleLength\n      };\n      this._updateViewableItems(this.props.data);\n      if (!this.props) {\n        return;\n      }\n      this._maybeCallOnEndReached();\n      if (velocity !== 0) {\n        this._fillRateHelper.activate();\n      }\n      this._computeBlankness();\n      this._scheduleCellsToRenderUpdate();\n    };\n    this._onScrollBeginDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n      this._hasInteracted = true;\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n    };\n    this._onScrollEndDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScrollEndDrag(e);\n      });\n      var velocity = e.nativeEvent.velocity;\n      if (velocity) {\n        this._scrollMetrics.velocity = this._selectOffset(velocity);\n      }\n      this._computeBlankness();\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n    };\n    this._onMomentumScrollBegin = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onMomentumScrollBegin(e);\n      });\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n    };\n    this._onMomentumScrollEnd = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onMomentumScrollEnd(e);\n      });\n      this._scrollMetrics.velocity = 0;\n      this._computeBlankness();\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n    };\n    this._updateCellsToRender = () => {\n      var _this$props3 = this.props,\n        data = _this$props3.data,\n        getItemCount = _this$props3.getItemCount,\n        _onEndReachedThreshold = _this$props3.onEndReachedThreshold;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(_onEndReachedThreshold);\n      var isVirtualizationDisabled = this._isVirtualizationDisabled();\n      this._updateViewableItems(data);\n      if (!data) {\n        return;\n      }\n      this.setState(state => {\n        var newState;\n        var _this$_scrollMetrics = this._scrollMetrics,\n          contentLength = _this$_scrollMetrics.contentLength,\n          offset = _this$_scrollMetrics.offset,\n          visibleLength = _this$_scrollMetrics.visibleLength;\n        if (!isVirtualizationDisabled) {\n          // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n          // and wipe out the initialNumToRender rendered elements.\n          // So let's wait until the scroll view metrics have been set up. And until then,\n          // we will trust the initialNumToRender suggestion\n          if (visibleLength > 0 && contentLength > 0) {\n            // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n            // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n            // So let's wait until we've scrolled the view to the right place. And until then,\n            // we will trust the initialScrollIndex suggestion.\n            if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(this.props.data, this.props.getItemCount, maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch), windowSizeOrDefault(this.props.windowSize), state, this._getFrameMetricsApprox, this._scrollMetrics);\n            }\n          }\n        } else {\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch) : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n        if (newState && this._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last;\n          // If some cell in the new state has a child list in it, we should only render\n          // up through that item, so that we give that list a chance to render.\n          // Otherwise there's churn from multiple child lists mounting and un-mounting\n          // their items.\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = this._indicesToKeys.get(ii);\n            var childListKeys = cellKeyForIndex && this._cellKeysToChildListKeys.get(cellKeyForIndex);\n            if (!childListKeys) {\n              continue;\n            }\n            var someChildHasMore = false;\n            // For each cell, need to check whether any child list in it has more elements to render\n            for (var _iterator = _createForOfIteratorHelperLoose(childListKeys), _step; !(_step = _iterator()).done;) {\n              var childKey = _step.value;\n              var childList = this._nestedChildLists.get(childKey);\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n            if (someChildHasMore) {\n              // $FlowFixMe[incompatible-use] The newState definitely exists past \"if (newState &&\"\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n        if (newState != null && newState.first === state.first && newState.last === state.last) {\n          newState = null;\n        }\n        return newState;\n      });\n    };\n    this._createViewToken = (index, isViewable) => {\n      var _this$props4 = this.props,\n        data = _this$props4.data,\n        getItem = _this$props4.getItem;\n      var item = getItem(data, index);\n      return {\n        index,\n        item,\n        key: this._keyExtractor(item, index),\n        isViewable\n      };\n    };\n    this._getFrameMetricsApprox = index => {\n      var frame = this._getFrameMetrics(index);\n      if (frame && frame.index === index) {\n        // check for invalid frames due to row re-ordering\n        return frame;\n      } else {\n        var getItemLayout = this.props.getItemLayout;\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: this._averageCellLength,\n          offset: this._averageCellLength * index\n        };\n      }\n    };\n    this._getFrameMetrics = index => {\n      var _this$props5 = this.props,\n        data = _this$props5.data,\n        getItem = _this$props5.getItem,\n        getItemCount = _this$props5.getItemCount,\n        getItemLayout = _this$props5.getItemLayout;\n      invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n      var frame = item && this._frames[this._keyExtractor(item, index)];\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n        }\n      }\n      /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.63 was deployed. To see the error\n       * delete this comment and run Flow. */\n      return frame;\n    };\n    invariant(\n    // $FlowFixMe[prop-missing]\n    !_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(windowSizeOrDefault(_props.windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(this._updateCellsToRender, (_this$props$updateCel = this.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n        onViewableItemsChanged: pair.onViewableItemsChanged\n      }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        // $FlowFixMe[incompatible-call]\n        onViewableItemsChanged: this.props.onViewableItemsChanged\n      });\n    }\n    var initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last: Math.min(this.props.getItemCount(this.props.data), (this.props.initialScrollIndex || 0) + initialNumToRenderOrDefault(this.props.initialNumToRender)) - 1\n    };\n    if (this._isNestedWithSameOrientation()) {\n      var storedState = this.context.getNestedChildState(this._getListKey());\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    }\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    // For issue https://github.com/necolas/react-native-web/issues/995\n    this.invertedWheelEventHandler = ev => {\n      if (this.props.inverted && this._scrollRef && this._scrollRef.getScrollableNode) {\n        var node = this._scrollRef.getScrollableNode();\n        if (this.props.horizontal) {\n          node.scrollLeft -= ev.deltaX || ev.wheelDeltaX;\n        } else {\n          node.scrollTop -= ev.deltaY || ev.wheelDeltaY;\n        }\n        ev.preventDefault();\n      }\n    };\n    this.state = initialState;\n  }\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this._getListKey(),\n        ref: this,\n        // NOTE: When the child mounts (here) it's not necessarily safe to read\n        // the parent's props. This is why we explicitly propagate debugInfo\n        // \"down\" via context and \"up\" again via this method call on the\n        // parent.\n        parentDebugInfo: this.context.debugInfo\n      });\n    }\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    this.setupWebWheelHandler();\n  }\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        key: this._getListKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames\n        }\n      });\n    }\n    this._updateViewableItems(null);\n    this._updateCellsToRenderBatcher.dispose({\n      abort: true\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    this.teardownWebWheelHandler();\n  }\n\n  // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n  setupWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().addEventListener('wheel', this.invertedWheelEventHandler);\n    } else {\n      setTimeout(() => this.setupWebWheelHandler(), 50);\n      return;\n    }\n  }\n\n  // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n  teardownWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().removeEventListener('wheel', this.invertedWheelEventHandler);\n    }\n  }\n  static getDerivedStateFromProps(newProps, prevState) {\n    var data = newProps.data,\n      getItemCount = newProps.getItemCount;\n    var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(newProps.maxToRenderPerBatch);\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    return {\n      first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n    };\n  }\n  _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n    var _this = this;\n    var _this$props6 = this.props,\n      CellRendererComponent = _this$props6.CellRendererComponent,\n      ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,\n      data = _this$props6.data,\n      getItem = _this$props6.getItem,\n      getItemCount = _this$props6.getItemCount,\n      horizontal = _this$props6.horizontal;\n    var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    var end = getItemCount(data) - 1;\n    var prevCellKey;\n    last = Math.min(end, last);\n    var _loop = function _loop(ii) {\n      var item = getItem(data, ii);\n      var key = _this._keyExtractor(item, ii);\n      _this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push( /*#__PURE__*/React.createElement(CellRenderer, {\n        CellRendererComponent: CellRendererComponent,\n        ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n        cellKey: key,\n        fillRateHelper: _this._fillRateHelper,\n        horizontal: horizontal,\n        index: ii,\n        inversionStyle: inversionStyle,\n        item: item,\n        key: key,\n        prevCellKey: prevCellKey,\n        onUpdateSeparators: _this._onUpdateSeparators,\n        onLayout: e => _this._onCellLayout(e, key, ii),\n        onUnmount: _this._onCellUnmount,\n        parentProps: _this.props,\n        ref: _ref => {\n          _this._cellRefs[key] = _ref;\n        }\n      }));\n      prevCellKey = key;\n    };\n    for (var ii = first; ii <= last; ii++) {\n      _loop(ii);\n    }\n  }\n  _isVirtualizationDisabled() {\n    return this.props.disableVirtualization || false;\n  }\n  _isNestedWithSameOrientation() {\n    var nestedContext = this.context;\n    return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n  }\n  _keyExtractor(item, index) {\n    if (this.props.keyExtractor != null) {\n      return this.props.keyExtractor(item, index);\n    }\n    var key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n  render() {\n    if (__DEV__) {\n      var flatStyles = flattenStyle(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n      }\n    }\n    var _this$props7 = this.props,\n      ListEmptyComponent = _this$props7.ListEmptyComponent,\n      ListFooterComponent = _this$props7.ListFooterComponent,\n      ListHeaderComponent = _this$props7.ListHeaderComponent;\n    var _this$props8 = this.props,\n      data = _this$props8.data,\n      horizontal = _this$props8.horizontal;\n    var isVirtualizationDisabled = this._isVirtualizationDisabled();\n    var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n    var cells = [];\n    var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    var stickyHeaderIndices = [];\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      var element = /*#__PURE__*/React.isValidElement(ListHeaderComponent) ? ListHeaderComponent : /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListHeaderComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-header',\n        key: \"$header\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutHeader,\n        style: [inversionStyle, this.props.ListHeaderComponentStyle]\n      },\n      // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      element)));\n    }\n    var itemCount = this.props.getItemCount(data);\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      var spacerKey = this._getSpacerKey(!horizontal);\n      var lastInitialIndex = this.props.initialScrollIndex ? -1 : initialNumToRenderOrDefault(this.props.initialNumToRender) - 1;\n      var _this$state = this.state,\n        first = _this$state.first,\n        last = _this$state.last;\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n      var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        var insertedStickySpacer = false;\n        if (stickyIndicesFromProps.size > 0) {\n          var stickyOffset = ListHeaderComponent ? 1 : 0;\n          // See if there are any sticky headers in the virtualized space that we need to render.\n          for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n              var stickyBlock = this._getFrameMetricsApprox(ii);\n              var leadSpace = stickyBlock.offset - initBlock.offset - (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push( /*#__PURE__*/React.createElement(View, {\n                key: \"$sticky_lead\",\n                style: {\n                  [spacerKey]: leadSpace\n                }\n              }));\n              this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n              var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n              cells.push( /*#__PURE__*/React.createElement(View, {\n                key: \"$sticky_trail\",\n                style: {\n                  [spacerKey]: trailSpace\n                }\n              }));\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n        if (!insertedStickySpacer) {\n          var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n          var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n          cells.push( /*#__PURE__*/React.createElement(View, {\n            key: \"$lead_spacer\",\n            style: {\n              [spacerKey]: firstSpace\n            }\n          }));\n        }\n      }\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n        this._hasWarned.keys = true;\n      }\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        var lastFrame = this._getFrameMetricsApprox(last);\n        // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n        var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n        var endFrame = this._getFrameMetricsApprox(end);\n        var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n        cells.push( /*#__PURE__*/React.createElement(View, {\n          key: \"$tail_spacer\",\n          style: {\n            [spacerKey]: tailSpacerLength\n          }\n        }));\n      }\n    } else if (ListEmptyComponent) {\n      var _element = /*#__PURE__*/React.isValidElement(ListEmptyComponent) ? ListEmptyComponent : /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListEmptyComponent, null);\n      cells.push( /*#__PURE__*/React.cloneElement(_element, {\n        key: '$empty',\n        onLayout: event => {\n          this._onLayoutEmpty(event);\n          if (_element.props.onLayout) {\n            _element.props.onLayout(event);\n          }\n        },\n        style: [inversionStyle, _element.props.style]\n      }));\n    }\n    if (ListFooterComponent) {\n      var _element2 = /*#__PURE__*/React.isValidElement(ListFooterComponent) ? ListFooterComponent : /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListFooterComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getFooterCellKey(),\n        key: \"$footer\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutFooter,\n        style: [inversionStyle, this.props.ListFooterComponentStyle]\n      },\n      // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      _element2)));\n    }\n    var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n      // TODO: Android support\n      invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n    });\n    this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n    var innerRet = /*#__PURE__*/React.createElement(VirtualizedListContextProvider, {\n      value: {\n        cellKey: null,\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: horizontalOrDefault(this.props.horizontal),\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n        debugInfo: this._getDebugInfo()\n      }\n    }, /*#__PURE__*/React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n      ref: this._captureScrollRef\n    }, cells));\n    var ret = innerRet;\n    /* https://github.com/necolas/react-native-web/issues/2239: Re-enable when ScrollView.Context.Consumer is available.\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }*/\n    if (this.props.debug) {\n      return /*#__PURE__*/React.createElement(View, {\n        style: styles.debug\n      }, ret, this._renderDebugOverlay());\n    } else {\n      return ret;\n    }\n  }\n  componentDidUpdate(prevProps) {\n    var _this$props9 = this.props,\n      data = _this$props9.data,\n      extraData = _this$props9.extraData;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    var hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n  }\n  _onCellLayout(e, cellKey, index) {\n    var layout = e.nativeEvent.layout;\n    var next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true\n    };\n    var curr = this._frames[cellKey];\n    if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n    this._triggerRemeasureForChildListsInCell(cellKey);\n    this._computeBlankness();\n    this._updateViewableItems(this.props.data);\n  }\n  _triggerRemeasureForChildListsInCell(cellKey) {\n    var childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n    if (childListKeys) {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(childListKeys), _step2; !(_step2 = _iterator2()).done;) {\n        var childKey = _step2.value;\n        var childList = this._nestedChildLists.get(childKey);\n        childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n  }\n  measureLayoutRelativeToContainingList() {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), (x, y, width, height) => {\n        this._offsetFromParentVirtualizedList = this._selectOffset({\n          x,\n          y\n        });\n        this._scrollMetrics.contentLength = this._selectLength({\n          width,\n          height\n        });\n        var scrollMetrics = this._convertParentScrollMetrics(this.context.getScrollMetrics());\n        var metricsChanged = this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || this._scrollMetrics.offset !== scrollMetrics.offset;\n        if (metricsChanged) {\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset;\n\n          // If metrics of the scrollView changed, then we triggered remeasure for child list\n          // to ensure VirtualizedList has the right information.\n          this._cellKeysToChildListKeys.forEach(childListKeys => {\n            if (childListKeys) {\n              for (var _iterator3 = _createForOfIteratorHelperLoose(childListKeys), _step3; !(_step3 = _iterator3()).done;) {\n                var childKey = _step3.value;\n                var childList = this._nestedChildLists.get(childKey);\n                childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n              }\n            }\n          });\n        }\n      }, error => {\n        console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n      });\n    } catch (error) {\n      console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n    }\n  }\n  _getFooterCellKey() {\n    return this._getCellKey() + '-footer';\n  }\n  _renderDebugOverlay() {\n    var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n    var framesInLayout = [];\n    var itemCount = this.props.getItemCount(this.props.data);\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n    var frameLast = this._getFrameMetricsApprox(this.state.last);\n    var windowLen = frameLast.offset + frameLast.length - windowTop;\n    var visTop = this._scrollMetrics.offset;\n    var visLen = this._scrollMetrics.visibleLength;\n    return /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlay]\n    }, framesInLayout.map((f, ii) => /*#__PURE__*/React.createElement(View, {\n      key: 'f' + ii,\n      style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n        top: f.offset * normalize,\n        height: f.length * normalize\n      }]\n    })), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n        top: windowTop * normalize,\n        height: windowLen * normalize\n      }]\n    }), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n        top: visTop * normalize,\n        height: visLen * normalize\n      }]\n    }));\n  }\n  _selectLength(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n  }\n  _selectOffset(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n  _maybeCallOnEndReached() {\n    var _this$props10 = this.props,\n      data = _this$props10.data,\n      getItemCount = _this$props10.getItemCount,\n      onEndReached = _this$props10.onEndReached,\n      onEndReachedThreshold = _this$props10.onEndReachedThreshold;\n    var _this$_scrollMetrics2 = this._scrollMetrics,\n      contentLength = _this$_scrollMetrics2.contentLength,\n      visibleLength = _this$_scrollMetrics2.visibleLength,\n      offset = _this$_scrollMetrics2.offset;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n    var threshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;\n    if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < threshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({\n        distanceFromEnd\n      });\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  }\n  _scheduleCellsToRenderUpdate() {\n    var _this$state2 = this.state,\n      first = _this$state2.first,\n      last = _this$state2.last;\n    var _this$_scrollMetrics3 = this._scrollMetrics,\n      offset = _this$_scrollMetrics3.offset,\n      visibleLength = _this$_scrollMetrics3.visibleLength,\n      velocity = _this$_scrollMetrics3.velocity;\n    var itemCount = this.props.getItemCount(this.props.data);\n    var hiPri = false;\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n    var scrollingThreshold = onEndReachedThreshold * visibleLength / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      var distTop = offset - this._getFrameMetricsApprox(first).offset;\n      hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last < itemCount - 1) {\n      var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n  _updateViewableItems(data) {\n    var getItemCount = this.props.getItemCount;\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(getItemCount(data), this._scrollMetrics.offset, this._scrollMetrics.visibleLength, this._getFrameMetrics, this._createViewToken, tuple.onViewableItemsChanged, this.state);\n    });\n  }\n}\nVirtualizedList.contextType = VirtualizedListContext;\nclass CellRenderer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: this.props.item\n      }\n    };\n    this._separators = {\n      highlight: () => {\n        var _this$props11 = this.props,\n          cellKey = _this$props11.cellKey,\n          prevCellKey = _this$props11.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: () => {\n        var _this$props12 = this.props,\n          cellKey = _this$props12.cellKey,\n          prevCellKey = _this$props12.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: (select, newProps) => {\n        var _this$props13 = this.props,\n          cellKey = _this$props13.cellKey,\n          prevCellKey = _this$props13.prevCellKey;\n        this.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n  }\n  static getDerivedStateFromProps(props, prevState) {\n    return {\n      separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n        leadingItem: props.item\n      })\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n\n  updateSeparatorProps(newProps) {\n    this.setState(state => ({\n      separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n    }));\n  }\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn('VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' + ' precedence over renderItem.');\n    }\n    if (ListItemComponent) {\n      /* $FlowFixMe[not-a-component] (>=0.108.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.108 was deployed. To\n       * see the error, delete this comment and run Flow. */\n      /* $FlowFixMe[incompatible-type-arg] (>=0.108.0 site=react_native_fb)\n       * This comment suppresses an error found when Flow v0.108 was deployed.\n       * To see the error, delete this comment and run Flow. */\n      return /*#__PURE__*/React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n    invariant(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');\n  }\n  render() {\n    var _this$props14 = this.props,\n      CellRendererComponent = _this$props14.CellRendererComponent,\n      ItemSeparatorComponent = _this$props14.ItemSeparatorComponent,\n      fillRateHelper = _this$props14.fillRateHelper,\n      horizontal = _this$props14.horizontal,\n      item = _this$props14.item,\n      index = _this$props14.index,\n      inversionStyle = _this$props14.inversionStyle,\n      parentProps = _this$props14.parentProps;\n    var renderItem = parentProps.renderItem,\n      getItemLayout = parentProps.getItemLayout,\n      ListItemComponent = parentProps.ListItemComponent;\n    var element = this._renderElement(renderItem, ListItemComponent, item, index);\n    var onLayout =\n    /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n     * suppresses an error found when Flow v0.68 was deployed. To see the\n     * error delete this comment and run Flow. */\n    getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout;\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    var itemSeparator = ItemSeparatorComponent && /*#__PURE__*/React.createElement(ItemSeparatorComponent, this.state.separatorProps);\n    var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n    var result = !CellRendererComponent ? /*#__PURE__*/\n    /* $FlowFixMe[incompatible-type-arg] (>=0.89.0 site=react_native_fb) *\n      This comment suppresses an error found when Flow v0.89 was deployed. *\n      To see the error, delete this comment and run Flow. */\n    React.createElement(View, {\n      style: cellStyle,\n      onLayout: onLayout\n    }, element, itemSeparator) : /*#__PURE__*/React.createElement(CellRendererComponent, _extends({}, this.props, {\n      style: cellStyle,\n      onLayout: onLayout\n    }), element, itemSeparator);\n    return /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n      cellKey: this.props.cellKey\n    }, result);\n  }\n}\nfunction describeNestedLists(childList) {\n  var trace = 'VirtualizedList trace:\\n' + (\"  Child (\" + (childList.horizontal ? 'horizontal' : 'vertical') + \"):\\n\") + (\"    listKey: \" + childList.key + \"\\n\") + (\"    cellKey: \" + childList.cellKey);\n  var debugInfo = childList.parentDebugInfo;\n  while (debugInfo) {\n    trace += \"\\n  Parent (\" + (debugInfo.horizontal ? 'horizontal' : 'vertical') + \"):\\n\" + (\"    listKey: \" + debugInfo.listKey + \"\\n\") + (\"    cellKey: \" + debugInfo.cellKey);\n    debugInfo = debugInfo.parent;\n  }\n  return trace;\n}\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: 'scaleY(-1)'\n  },\n  horizontallyInverted: {\n    transform: 'scaleX(-1)'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nexport default VirtualizedList;","map":{"version":3,"names":["_createForOfIteratorHelperLoose","_extends","_objectSpread","Batchinator","FillRateHelper","RefreshControl","ScrollView","StyleSheet","View","ViewabilityHelper","flattenStyle","flatten","infoLog","invariant","keyExtractor","defaultKeyExtractor","computeWindowedRenderLimits","React","VirtualizedListCellContextProvider","VirtualizedListContext","VirtualizedListContextProvider","__DEV__","process","env","NODE_ENV","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onEndReachedThresholdOrDefault","onEndReachedThreshold","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","VirtualizedList","PureComponent","scrollToEnd","params","animated","veryLast","props","getItemCount","data","frame","_getFrameMetricsApprox","offset","Math","max","length","_footerLength","_scrollMetrics","visibleLength","_scrollRef","scrollTo","console","warn","x","y","scrollToIndex","_this$props","getItemLayout","onScrollToIndexFailed","index","viewOffset","viewPosition","_highestMeasuredFrameIndex","averageItemLength","_averageCellLength","highestMeasuredFrameIndex","scrollToItem","item","_this$props2","getItem","itemCount","_index","scrollToOffset","recordInteraction","_nestedChildLists","forEach","childList","ref","_viewabilityTuples","t","viewabilityHelper","_updateViewableItems","flashScrollIndicators","getScrollResponder","getScrollableNode","getScrollRef","_getCellKey","_this$context","context","cellKey","_getListKey","listKey","_getDebugInfo","_this$context2","parent","debugInfo","hasMore","_hasMore","constructor","_props","_this$props$updateCel","_getScrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","getOutermostParentListRef","_getNestedChildState","key","existingChildData","get","state","_registerAsNestedChild","childListsInCell","_cellKeysToChildListKeys","Set","add","set","error","describeNestedLists","_hasInteracted","_unregisterAsNestedChild","_onUpdateSeparators","keys","newProps","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","Map","_frames","_hasDoneInitialScroll","_hasWarned","_headerLength","_hiPriInProgress","_indicesToKeys","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","timestamp","velocity","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","createElement","_props$refreshing","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellUnmount","curr","inLayout","_onLayout","e","measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_triggerRemeasureForChildListsInCell","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","_this$_convertParentS","perf","prevDt","_fillRateHelper","activate","_computeBlankness","_onScrollBeginDrag","tuple","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","_this$props3","_onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","_this$_scrollMetrics","distanceFromEnd","renderAhead","first","last","min","size","newFirst","newLast","ii","cellKeyForIndex","childListKeys","someChildHasMore","_iterator","_step","done","childKey","value","_createViewToken","isViewable","_this$props4","_keyExtractor","_getFrameMetrics","_this$props5","__isNative","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","storedState","getNestedChildState","frames","invertedWheelEventHandler","ev","inverted","node","scrollLeft","deltaX","wheelDeltaX","scrollTop","deltaY","wheelDeltaY","preventDefault","componentDidMount","registerAsNestedChild","parentDebugInfo","setupWebWheelHandler","componentWillUnmount","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","teardownWebWheelHandler","addEventListener","setTimeout","removeEventListener","getDerivedStateFromProps","prevState","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","_this","_this$props6","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","prevCellKey","_loop","has","CellRenderer","undefined","fillRateHelper","onUpdateSeparators","_onCellLayout","onUnmount","parentProps","_ref","disableVirtualization","nestedContext","String","type","displayName","render","flatStyles","contentContainerStyle","flexWrap","_this$props7","ListEmptyComponent","ListFooterComponent","_this$props8","styles","horizontallyInverted","verticallyInverted","element","isValidElement","style","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_this$state","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","_initBlock","firstSpace","lastFrame","endFrame","tailSpacerLength","_element","cloneElement","event","_element2","ListFooterComponentStyle","scrollProps","invertStickyHeaders","innerRet","getScrollMetrics","renderScrollComponent","ret","debug","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props9","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","next","_iterator2","_step2","measureLayout","scrollMetrics","metricsChanged","_iterator3","_step3","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","_this$props10","onEndReached","_this$_scrollMetrics2","threshold","_this$state2","_this$_scrollMetrics3","hiPri","scrollingThreshold","distTop","distBottom","schedule","onUpdate","contextType","Component","arguments","separatorProps","highlighted","leadingItem","_separators","highlight","_this$props11","unhighlight","_this$props12","updateProps","select","_this$props13","_renderElement","renderItem","ListItemComponent","separators","_this$props14","enabled","itemSeparator","cellStyle","rowReverse","columnReverse","row","result","trace","create","transform","flexDirection","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor"],"sources":["C:/Users/HP/Desktop/chebal/tranquilizer-/FRONTEND/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js"],"sourcesContent":["import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport Batchinator from '../Batchinator';\nimport FillRateHelper from '../FillRateHelper';\nimport RefreshControl from '../../../exports/RefreshControl';\nimport ScrollView from '../../../exports/ScrollView';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport View from '../../../exports/View';\nimport ViewabilityHelper from '../ViewabilityHelper';\nvar flattenStyle = StyleSheet.flatten;\nimport infoLog from '../infoLog';\nimport invariant from 'fbjs/lib/invariant';\nimport { keyExtractor as defaultKeyExtractor, computeWindowedRenderLimits } from '../VirtualizeUtils';\nimport * as React from 'react';\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from './VirtualizedListContext.js';\nvar __DEV__ = process.env.NODE_ENV !== 'production';\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal) {\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\n}\n\n// initialNumToRenderOrDefault(this.props.initialNumToRenderOrDefault)\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\n}\n\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\n}\n\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\n}\n\n// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\n}\n\n// windowSizeOrDefault(this.props.windowSize)\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nclass VirtualizedList extends React.PureComponent {\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params) {\n    var animated = params ? params.animated : true;\n    var veryLast = this.props.getItemCount(this.props.data) - 1;\n    var frame = this._getFrameMetricsApprox(veryLast);\n    var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params) {\n    var _this$props = this.props,\n      data = _this$props.data,\n      horizontal = _this$props.horizontal,\n      getItemCount = _this$props.getItemCount,\n      getItemLayout = _this$props.getItemLayout,\n      onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n    var animated = params.animated,\n      index = params.index,\n      viewOffset = params.viewOffset,\n      viewPosition = params.viewPosition;\n    invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n    invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n    invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index\n      });\n      return;\n    }\n    var frame = this._getFrameMetricsApprox(index);\n    var offset = Math.max(0, frame.offset - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontal ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params) {\n    var item = params.item;\n    var _this$props2 = this.props,\n      data = _this$props2.data,\n      getItem = _this$props2.getItem,\n      getItemCount = _this$props2.getItemCount;\n    var itemCount = getItemCount(data);\n    for (var _index = 0; _index < itemCount; _index++) {\n      if (getItem(data, _index) === item) {\n        this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n          index: _index\n        }));\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params) {\n    var animated = params.animated,\n      offset = params.offset;\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props.data);\n  }\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n  getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return this._scrollRef;\n    }\n  }\n  getScrollRef() {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n  _getCellKey() {\n    var _this$context;\n    return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n  }\n  _getListKey() {\n    return this.props.listKey || this._getCellKey();\n  }\n  _getDebugInfo() {\n    var _this$context2;\n    return {\n      listKey: this._getListKey(),\n      cellKey: this._getCellKey(),\n      horizontal: horizontalOrDefault(this.props.horizontal),\n      parent: (_this$context2 = this.context) == null ? void 0 : _this$context2.debugInfo\n    };\n  }\n  hasMore() {\n    return this._hasMore;\n  }\n  constructor(_props) {\n    var _this$props$updateCel;\n    super(_props);\n    this._getScrollMetrics = () => {\n      return this._scrollMetrics;\n    };\n    this._getOutermostParentListRef = () => {\n      if (this._isNestedWithSameOrientation()) {\n        return this.context.getOutermostParentListRef();\n      } else {\n        return this;\n      }\n    };\n    this._getNestedChildState = key => {\n      var existingChildData = this._nestedChildLists.get(key);\n      return existingChildData && existingChildData.state;\n    };\n    this._registerAsNestedChild = childList => {\n      // Register the mapping between this child key and the cellKey for its cell\n      var childListsInCell = this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n      childListsInCell.add(childList.key);\n      this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n      var existingChildData = this._nestedChildLists.get(childList.key);\n      if (existingChildData && existingChildData.ref !== null) {\n        console.error('A VirtualizedList contains a cell which itself contains ' + 'more than one VirtualizedList of the same orientation as the parent ' + 'list. You must pass a unique listKey prop to each sibling list.\\n\\n' + describeNestedLists(_objectSpread(_objectSpread({}, childList), {}, {\n          // We're called from the child's componentDidMount, so it's safe to\n          // read the child's props here (albeit weird).\n          horizontal: !!childList.ref.props.horizontal\n        })));\n      }\n      this._nestedChildLists.set(childList.key, {\n        ref: childList.ref,\n        state: null\n      });\n      if (this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n    this._unregisterAsNestedChild = childList => {\n      this._nestedChildLists.set(childList.key, {\n        ref: null,\n        state: childList.state\n      });\n    };\n    this._onUpdateSeparators = (keys, newProps) => {\n      keys.forEach(key => {\n        var ref = key != null && this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n    this._getSpacerKey = isVertical => isVertical ? 'height' : 'width';\n    this._averageCellLength = 0;\n    this._cellKeysToChildListKeys = new Map();\n    this._cellRefs = {};\n    this._frames = {};\n    this._footerLength = 0;\n    this._hasDoneInitialScroll = false;\n    this._hasInteracted = false;\n    this._hasMore = false;\n    this._hasWarned = {};\n    this._headerLength = 0;\n    this._hiPriInProgress = false;\n    this._highestMeasuredFrameIndex = 0;\n    this._indicesToKeys = new Map();\n    this._nestedChildLists = new Map();\n    this._offsetFromParentVirtualizedList = 0;\n    this._prevParentOffset = 0;\n    this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0\n    };\n    this._scrollRef = null;\n    this._sentEndForContentLength = 0;\n    this._totalCellLength = 0;\n    this._totalCellsMeasured = 0;\n    this._viewabilityTuples = [];\n    this._captureScrollRef = ref => {\n      this._scrollRef = ref;\n    };\n    this._defaultRenderScrollComponent = props => {\n      var onRefresh = props.onRefresh;\n      if (this._isNestedWithSameOrientation()) {\n        // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n        return /*#__PURE__*/React.createElement(View, props);\n      } else if (onRefresh) {\n        var _props$refreshing;\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : 'undefined') + '`');\n        return (\n          /*#__PURE__*/\n          // $FlowFixMe[prop-missing] Invalid prop usage\n          React.createElement(ScrollView, _extends({}, props, {\n            refreshControl: props.refreshControl == null ? /*#__PURE__*/React.createElement(RefreshControl, {\n              refreshing: props.refreshing,\n              onRefresh: onRefresh,\n              progressViewOffset: props.progressViewOffset\n            }) : props.refreshControl\n          }))\n        );\n      } else {\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        return /*#__PURE__*/React.createElement(ScrollView, props);\n      }\n    };\n    this._onCellUnmount = cellKey => {\n      var curr = this._frames[cellKey];\n      if (curr) {\n        this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n    this._onLayout = e => {\n      if (this._isNestedWithSameOrientation()) {\n        // Need to adjust our scroll metrics to be relative to our containing\n        // VirtualizedList before we can make claims about list item viewability\n        this.measureLayoutRelativeToContainingList();\n      } else {\n        this._scrollMetrics.visibleLength = this._selectLength(e.nativeEvent.layout);\n      }\n      this.props.onLayout && this.props.onLayout(e);\n      this._scheduleCellsToRenderUpdate();\n      this._maybeCallOnEndReached();\n    };\n    this._onLayoutEmpty = e => {\n      this.props.onLayout && this.props.onLayout(e);\n    };\n    this._onLayoutFooter = e => {\n      this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n      this._footerLength = this._selectLength(e.nativeEvent.layout);\n    };\n    this._onLayoutHeader = e => {\n      this._headerLength = this._selectLength(e.nativeEvent.layout);\n    };\n    this._onContentSizeChange = (width, height) => {\n      if (width > 0 && height > 0 && this.props.initialScrollIndex != null && this.props.initialScrollIndex > 0 && !this._hasDoneInitialScroll) {\n        if (this.props.contentOffset == null) {\n          this.scrollToIndex({\n            animated: false,\n            index: this.props.initialScrollIndex\n          });\n        }\n        this._hasDoneInitialScroll = true;\n      }\n      if (this.props.onContentSizeChange) {\n        this.props.onContentSizeChange(width, height);\n      }\n      this._scrollMetrics.contentLength = this._selectLength({\n        height,\n        width\n      });\n      this._scheduleCellsToRenderUpdate();\n      this._maybeCallOnEndReached();\n    };\n    this._convertParentScrollMetrics = metrics => {\n      // Offset of the top of the nested list relative to the top of its parent's viewport\n      var offset = metrics.offset - this._offsetFromParentVirtualizedList;\n      // Child's visible length is the same as its parent's\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - this._scrollMetrics.offset;\n      var contentLength = this._scrollMetrics.contentLength;\n      return {\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset\n      };\n    };\n    this._onScroll = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScroll(e);\n      });\n      if (this.props.onScroll) {\n        this.props.onScroll(e);\n      }\n      var timestamp = e.timeStamp;\n      var visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n      var contentLength = this._selectLength(e.nativeEvent.contentSize);\n      var offset = this._selectOffset(e.nativeEvent.contentOffset);\n      var dOffset = offset - this._scrollMetrics.offset;\n      if (this._isNestedWithSameOrientation()) {\n        if (this._scrollMetrics.contentLength === 0) {\n          // Ignore scroll events until onLayout has been called and we\n          // know our offset from our offset from our parent\n          return;\n        }\n        var _this$_convertParentS = this._convertParentScrollMetrics({\n          visibleLength,\n          offset\n        });\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n      var dt = this._scrollMetrics.timestamp ? Math.max(1, timestamp - this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n      if (dt > 500 && this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt,\n          prevDt: this._scrollMetrics.dt,\n          contentLength\n        });\n        this._hasWarned.perf = true;\n      }\n      this._scrollMetrics = {\n        contentLength,\n        dt,\n        dOffset,\n        offset,\n        timestamp,\n        velocity,\n        visibleLength\n      };\n      this._updateViewableItems(this.props.data);\n      if (!this.props) {\n        return;\n      }\n      this._maybeCallOnEndReached();\n      if (velocity !== 0) {\n        this._fillRateHelper.activate();\n      }\n      this._computeBlankness();\n      this._scheduleCellsToRenderUpdate();\n    };\n    this._onScrollBeginDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScrollBeginDrag(e);\n      });\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n      this._hasInteracted = true;\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n    };\n    this._onScrollEndDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onScrollEndDrag(e);\n      });\n      var velocity = e.nativeEvent.velocity;\n      if (velocity) {\n        this._scrollMetrics.velocity = this._selectOffset(velocity);\n      }\n      this._computeBlankness();\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n    };\n    this._onMomentumScrollBegin = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onMomentumScrollBegin(e);\n      });\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n    };\n    this._onMomentumScrollEnd = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList.ref && childList.ref._onMomentumScrollEnd(e);\n      });\n      this._scrollMetrics.velocity = 0;\n      this._computeBlankness();\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n    };\n    this._updateCellsToRender = () => {\n      var _this$props3 = this.props,\n        data = _this$props3.data,\n        getItemCount = _this$props3.getItemCount,\n        _onEndReachedThreshold = _this$props3.onEndReachedThreshold;\n      var onEndReachedThreshold = onEndReachedThresholdOrDefault(_onEndReachedThreshold);\n      var isVirtualizationDisabled = this._isVirtualizationDisabled();\n      this._updateViewableItems(data);\n      if (!data) {\n        return;\n      }\n      this.setState(state => {\n        var newState;\n        var _this$_scrollMetrics = this._scrollMetrics,\n          contentLength = _this$_scrollMetrics.contentLength,\n          offset = _this$_scrollMetrics.offset,\n          visibleLength = _this$_scrollMetrics.visibleLength;\n        if (!isVirtualizationDisabled) {\n          // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n          // and wipe out the initialNumToRender rendered elements.\n          // So let's wait until the scroll view metrics have been set up. And until then,\n          // we will trust the initialNumToRender suggestion\n          if (visibleLength > 0 && contentLength > 0) {\n            // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n            // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n            // So let's wait until we've scrolled the view to the right place. And until then,\n            // we will trust the initialScrollIndex suggestion.\n            if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n              newState = computeWindowedRenderLimits(this.props.data, this.props.getItemCount, maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch), windowSizeOrDefault(this.props.windowSize), state, this._getFrameMetricsApprox, this._scrollMetrics);\n            }\n          }\n        } else {\n          var distanceFromEnd = contentLength - visibleLength - offset;\n          var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch) : 0;\n          newState = {\n            first: 0,\n            last: Math.min(state.last + renderAhead, getItemCount(data) - 1)\n          };\n        }\n        if (newState && this._nestedChildLists.size > 0) {\n          var newFirst = newState.first;\n          var newLast = newState.last;\n          // If some cell in the new state has a child list in it, we should only render\n          // up through that item, so that we give that list a chance to render.\n          // Otherwise there's churn from multiple child lists mounting and un-mounting\n          // their items.\n          for (var ii = newFirst; ii <= newLast; ii++) {\n            var cellKeyForIndex = this._indicesToKeys.get(ii);\n            var childListKeys = cellKeyForIndex && this._cellKeysToChildListKeys.get(cellKeyForIndex);\n            if (!childListKeys) {\n              continue;\n            }\n            var someChildHasMore = false;\n            // For each cell, need to check whether any child list in it has more elements to render\n            for (var _iterator = _createForOfIteratorHelperLoose(childListKeys), _step; !(_step = _iterator()).done;) {\n              var childKey = _step.value;\n              var childList = this._nestedChildLists.get(childKey);\n              if (childList && childList.ref && childList.ref.hasMore()) {\n                someChildHasMore = true;\n                break;\n              }\n            }\n            if (someChildHasMore) {\n              // $FlowFixMe[incompatible-use] The newState definitely exists past \"if (newState &&\"\n              newState.last = ii;\n              break;\n            }\n          }\n        }\n        if (newState != null && newState.first === state.first && newState.last === state.last) {\n          newState = null;\n        }\n        return newState;\n      });\n    };\n    this._createViewToken = (index, isViewable) => {\n      var _this$props4 = this.props,\n        data = _this$props4.data,\n        getItem = _this$props4.getItem;\n      var item = getItem(data, index);\n      return {\n        index,\n        item,\n        key: this._keyExtractor(item, index),\n        isViewable\n      };\n    };\n    this._getFrameMetricsApprox = index => {\n      var frame = this._getFrameMetrics(index);\n      if (frame && frame.index === index) {\n        // check for invalid frames due to row re-ordering\n        return frame;\n      } else {\n        var getItemLayout = this.props.getItemLayout;\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: this._averageCellLength,\n          offset: this._averageCellLength * index\n        };\n      }\n    };\n    this._getFrameMetrics = index => {\n      var _this$props5 = this.props,\n        data = _this$props5.data,\n        getItem = _this$props5.getItem,\n        getItemCount = _this$props5.getItemCount,\n        getItemLayout = _this$props5.getItemLayout;\n      invariant(getItemCount(data) > index, 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n      var frame = item && this._frames[this._keyExtractor(item, index)];\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          frame = getItemLayout(data, index);\n        }\n      }\n      /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.63 was deployed. To see the error\n       * delete this comment and run Flow. */\n      return frame;\n    };\n    invariant(\n    // $FlowFixMe[prop-missing]\n    !_props.onScroll || !_props.onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(windowSizeOrDefault(_props.windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(this._updateCellsToRender, (_this$props$updateCel = this.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n        onViewableItemsChanged: pair.onViewableItemsChanged\n      }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        // $FlowFixMe[incompatible-call]\n        onViewableItemsChanged: this.props.onViewableItemsChanged\n      });\n    }\n    var initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last: Math.min(this.props.getItemCount(this.props.data), (this.props.initialScrollIndex || 0) + initialNumToRenderOrDefault(this.props.initialNumToRender)) - 1\n    };\n    if (this._isNestedWithSameOrientation()) {\n      var storedState = this.context.getNestedChildState(this._getListKey());\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    }\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    // For issue https://github.com/necolas/react-native-web/issues/995\n    this.invertedWheelEventHandler = ev => {\n      if (this.props.inverted && this._scrollRef && this._scrollRef.getScrollableNode) {\n        var node = this._scrollRef.getScrollableNode();\n        if (this.props.horizontal) {\n          node.scrollLeft -= ev.deltaX || ev.wheelDeltaX;\n        } else {\n          node.scrollTop -= ev.deltaY || ev.wheelDeltaY;\n        }\n        ev.preventDefault();\n      }\n    };\n    this.state = initialState;\n  }\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this._getListKey(),\n        ref: this,\n        // NOTE: When the child mounts (here) it's not necessarily safe to read\n        // the parent's props. This is why we explicitly propagate debugInfo\n        // \"down\" via context and \"up\" again via this method call on the\n        // parent.\n        parentDebugInfo: this.context.debugInfo\n      });\n    }\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    this.setupWebWheelHandler();\n  }\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        key: this._getListKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames\n        }\n      });\n    }\n    this._updateViewableItems(null);\n    this._updateCellsToRenderBatcher.dispose({\n      abort: true\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    this.teardownWebWheelHandler();\n  }\n\n  // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n  setupWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().addEventListener('wheel', this.invertedWheelEventHandler);\n    } else {\n      setTimeout(() => this.setupWebWheelHandler(), 50);\n      return;\n    }\n  }\n\n  // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n  teardownWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().removeEventListener('wheel', this.invertedWheelEventHandler);\n    }\n  }\n  static getDerivedStateFromProps(newProps, prevState) {\n    var data = newProps.data,\n      getItemCount = newProps.getItemCount;\n    var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(newProps.maxToRenderPerBatch);\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    return {\n      first: Math.max(0, Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch)),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1))\n    };\n  }\n  _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n    var _this = this;\n    var _this$props6 = this.props,\n      CellRendererComponent = _this$props6.CellRendererComponent,\n      ItemSeparatorComponent = _this$props6.ItemSeparatorComponent,\n      data = _this$props6.data,\n      getItem = _this$props6.getItem,\n      getItemCount = _this$props6.getItemCount,\n      horizontal = _this$props6.horizontal;\n    var stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    var end = getItemCount(data) - 1;\n    var prevCellKey;\n    last = Math.min(end, last);\n    var _loop = function _loop(ii) {\n      var item = getItem(data, ii);\n      var key = _this._keyExtractor(item, ii);\n      _this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push( /*#__PURE__*/React.createElement(CellRenderer, {\n        CellRendererComponent: CellRendererComponent,\n        ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n        cellKey: key,\n        fillRateHelper: _this._fillRateHelper,\n        horizontal: horizontal,\n        index: ii,\n        inversionStyle: inversionStyle,\n        item: item,\n        key: key,\n        prevCellKey: prevCellKey,\n        onUpdateSeparators: _this._onUpdateSeparators,\n        onLayout: e => _this._onCellLayout(e, key, ii),\n        onUnmount: _this._onCellUnmount,\n        parentProps: _this.props,\n        ref: _ref => {\n          _this._cellRefs[key] = _ref;\n        }\n      }));\n      prevCellKey = key;\n    };\n    for (var ii = first; ii <= last; ii++) {\n      _loop(ii);\n    }\n  }\n  _isVirtualizationDisabled() {\n    return this.props.disableVirtualization || false;\n  }\n  _isNestedWithSameOrientation() {\n    var nestedContext = this.context;\n    return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n  }\n  _keyExtractor(item, index) {\n    if (this.props.keyExtractor != null) {\n      return this.props.keyExtractor(item, index);\n    }\n    var key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n  render() {\n    if (__DEV__) {\n      var flatStyles = flattenStyle(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n      }\n    }\n    var _this$props7 = this.props,\n      ListEmptyComponent = _this$props7.ListEmptyComponent,\n      ListFooterComponent = _this$props7.ListFooterComponent,\n      ListHeaderComponent = _this$props7.ListHeaderComponent;\n    var _this$props8 = this.props,\n      data = _this$props8.data,\n      horizontal = _this$props8.horizontal;\n    var isVirtualizationDisabled = this._isVirtualizationDisabled();\n    var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n    var cells = [];\n    var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    var stickyHeaderIndices = [];\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      var element = /*#__PURE__*/React.isValidElement(ListHeaderComponent) ? ListHeaderComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListHeaderComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-header',\n        key: \"$header\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutHeader,\n        style: [inversionStyle, this.props.ListHeaderComponentStyle]\n      },\n      // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      element)));\n    }\n    var itemCount = this.props.getItemCount(data);\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      var spacerKey = this._getSpacerKey(!horizontal);\n      var lastInitialIndex = this.props.initialScrollIndex ? -1 : initialNumToRenderOrDefault(this.props.initialNumToRender) - 1;\n      var _this$state = this.state,\n        first = _this$state.first,\n        last = _this$state.last;\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, 0, lastInitialIndex, inversionStyle);\n      var firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        var insertedStickySpacer = false;\n        if (stickyIndicesFromProps.size > 0) {\n          var stickyOffset = ListHeaderComponent ? 1 : 0;\n          // See if there are any sticky headers in the virtualized space that we need to render.\n          for (var ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              var initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n              var stickyBlock = this._getFrameMetricsApprox(ii);\n              var leadSpace = stickyBlock.offset - initBlock.offset - (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push( /*#__PURE__*/React.createElement(View, {\n                key: \"$sticky_lead\",\n                style: {\n                  [spacerKey]: leadSpace\n                }\n              }));\n              this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, ii, ii, inversionStyle);\n              var trailSpace = this._getFrameMetricsApprox(first).offset - (stickyBlock.offset + stickyBlock.length);\n              cells.push( /*#__PURE__*/React.createElement(View, {\n                key: \"$sticky_trail\",\n                style: {\n                  [spacerKey]: trailSpace\n                }\n              }));\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n        if (!insertedStickySpacer) {\n          var _initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n          var firstSpace = this._getFrameMetricsApprox(first).offset - (_initBlock.offset + _initBlock.length);\n          cells.push( /*#__PURE__*/React.createElement(View, {\n            key: \"$lead_spacer\",\n            style: {\n              [spacerKey]: firstSpace\n            }\n          }));\n        }\n      }\n      this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, firstAfterInitial, last, inversionStyle);\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n        this._hasWarned.keys = true;\n      }\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        var lastFrame = this._getFrameMetricsApprox(last);\n        // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n        var end = this.props.getItemLayout ? itemCount - 1 : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n        var endFrame = this._getFrameMetricsApprox(end);\n        var tailSpacerLength = endFrame.offset + endFrame.length - (lastFrame.offset + lastFrame.length);\n        cells.push( /*#__PURE__*/React.createElement(View, {\n          key: \"$tail_spacer\",\n          style: {\n            [spacerKey]: tailSpacerLength\n          }\n        }));\n      }\n    } else if (ListEmptyComponent) {\n      var _element = /*#__PURE__*/React.isValidElement(ListEmptyComponent) ? ListEmptyComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListEmptyComponent, null);\n      cells.push( /*#__PURE__*/React.cloneElement(_element, {\n        key: '$empty',\n        onLayout: event => {\n          this._onLayoutEmpty(event);\n          if (_element.props.onLayout) {\n            _element.props.onLayout(event);\n          }\n        },\n        style: [inversionStyle, _element.props.style]\n      }));\n    }\n    if (ListFooterComponent) {\n      var _element2 = /*#__PURE__*/React.isValidElement(ListFooterComponent) ? ListFooterComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListFooterComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getFooterCellKey(),\n        key: \"$footer\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutFooter,\n        style: [inversionStyle, this.props.ListFooterComponentStyle]\n      },\n      // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      _element2)));\n    }\n    var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n      // TODO: Android support\n      invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n    });\n    this._hasMore = this.state.last < this.props.getItemCount(this.props.data) - 1;\n    var innerRet = /*#__PURE__*/React.createElement(VirtualizedListContextProvider, {\n      value: {\n        cellKey: null,\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: horizontalOrDefault(this.props.horizontal),\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n        debugInfo: this._getDebugInfo()\n      }\n    }, /*#__PURE__*/React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n      ref: this._captureScrollRef\n    }, cells));\n    var ret = innerRet;\n    /* https://github.com/necolas/react-native-web/issues/2239: Re-enable when ScrollView.Context.Consumer is available.\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }*/\n    if (this.props.debug) {\n      return /*#__PURE__*/React.createElement(View, {\n        style: styles.debug\n      }, ret, this._renderDebugOverlay());\n    } else {\n      return ret;\n    }\n  }\n  componentDidUpdate(prevProps) {\n    var _this$props9 = this.props,\n      data = _this$props9.data,\n      extraData = _this$props9.extraData;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    var hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(this.props, this.state, this._scrollMetrics);\n  }\n  _onCellLayout(e, cellKey, index) {\n    var layout = e.nativeEvent.layout;\n    var next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true\n    };\n    var curr = this._frames[cellKey];\n    if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n    this._triggerRemeasureForChildListsInCell(cellKey);\n    this._computeBlankness();\n    this._updateViewableItems(this.props.data);\n  }\n  _triggerRemeasureForChildListsInCell(cellKey) {\n    var childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n    if (childListKeys) {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(childListKeys), _step2; !(_step2 = _iterator2()).done;) {\n        var childKey = _step2.value;\n        var childList = this._nestedChildLists.get(childKey);\n        childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n  }\n  measureLayoutRelativeToContainingList() {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), (x, y, width, height) => {\n        this._offsetFromParentVirtualizedList = this._selectOffset({\n          x,\n          y\n        });\n        this._scrollMetrics.contentLength = this._selectLength({\n          width,\n          height\n        });\n        var scrollMetrics = this._convertParentScrollMetrics(this.context.getScrollMetrics());\n        var metricsChanged = this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || this._scrollMetrics.offset !== scrollMetrics.offset;\n        if (metricsChanged) {\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset;\n\n          // If metrics of the scrollView changed, then we triggered remeasure for child list\n          // to ensure VirtualizedList has the right information.\n          this._cellKeysToChildListKeys.forEach(childListKeys => {\n            if (childListKeys) {\n              for (var _iterator3 = _createForOfIteratorHelperLoose(childListKeys), _step3; !(_step3 = _iterator3()).done;) {\n                var childKey = _step3.value;\n                var childList = this._nestedChildLists.get(childKey);\n                childList && childList.ref && childList.ref.measureLayoutRelativeToContainingList();\n              }\n            }\n          });\n        }\n      }, error => {\n        console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n      });\n    } catch (error) {\n      console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n    }\n  }\n  _getFooterCellKey() {\n    return this._getCellKey() + '-footer';\n  }\n  _renderDebugOverlay() {\n    var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n    var framesInLayout = [];\n    var itemCount = this.props.getItemCount(this.props.data);\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    var windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n    var frameLast = this._getFrameMetricsApprox(this.state.last);\n    var windowLen = frameLast.offset + frameLast.length - windowTop;\n    var visTop = this._scrollMetrics.offset;\n    var visLen = this._scrollMetrics.visibleLength;\n    return /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlay]\n    }, framesInLayout.map((f, ii) => /*#__PURE__*/React.createElement(View, {\n      key: 'f' + ii,\n      style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n        top: f.offset * normalize,\n        height: f.length * normalize\n      }]\n    })), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n        top: windowTop * normalize,\n        height: windowLen * normalize\n      }]\n    }), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n        top: visTop * normalize,\n        height: visLen * normalize\n      }]\n    }));\n  }\n  _selectLength(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n  }\n  _selectOffset(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n  _maybeCallOnEndReached() {\n    var _this$props10 = this.props,\n      data = _this$props10.data,\n      getItemCount = _this$props10.getItemCount,\n      onEndReached = _this$props10.onEndReached,\n      onEndReachedThreshold = _this$props10.onEndReachedThreshold;\n    var _this$_scrollMetrics2 = this._scrollMetrics,\n      contentLength = _this$_scrollMetrics2.contentLength,\n      visibleLength = _this$_scrollMetrics2.visibleLength,\n      offset = _this$_scrollMetrics2.offset;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n    var threshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;\n    if (onEndReached && this.state.last === getItemCount(data) - 1 && distanceFromEnd < threshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({\n        distanceFromEnd\n      });\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  }\n  _scheduleCellsToRenderUpdate() {\n    var _this$state2 = this.state,\n      first = _this$state2.first,\n      last = _this$state2.last;\n    var _this$_scrollMetrics3 = this._scrollMetrics,\n      offset = _this$_scrollMetrics3.offset,\n      visibleLength = _this$_scrollMetrics3.visibleLength,\n      velocity = _this$_scrollMetrics3.velocity;\n    var itemCount = this.props.getItemCount(this.props.data);\n    var hiPri = false;\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n    var scrollingThreshold = onEndReachedThreshold * visibleLength / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      var distTop = offset - this._getFrameMetricsApprox(first).offset;\n      hiPri = hiPri || distTop < 0 || velocity < -2 && distTop < scrollingThreshold;\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last < itemCount - 1) {\n      var distBottom = this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri = hiPri || distBottom < 0 || velocity > 2 && distBottom < scrollingThreshold;\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n  _updateViewableItems(data) {\n    var getItemCount = this.props.getItemCount;\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(getItemCount(data), this._scrollMetrics.offset, this._scrollMetrics.visibleLength, this._getFrameMetrics, this._createViewToken, tuple.onViewableItemsChanged, this.state);\n    });\n  }\n}\nVirtualizedList.contextType = VirtualizedListContext;\nclass CellRenderer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: this.props.item\n      }\n    };\n    this._separators = {\n      highlight: () => {\n        var _this$props11 = this.props,\n          cellKey = _this$props11.cellKey,\n          prevCellKey = _this$props11.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: () => {\n        var _this$props12 = this.props,\n          cellKey = _this$props12.cellKey,\n          prevCellKey = _this$props12.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: (select, newProps) => {\n        var _this$props13 = this.props,\n          cellKey = _this$props13.cellKey,\n          prevCellKey = _this$props13.prevCellKey;\n        this.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n  }\n  static getDerivedStateFromProps(props, prevState) {\n    return {\n      separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n        leadingItem: props.item\n      })\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n\n  updateSeparatorProps(newProps) {\n    this.setState(state => ({\n      separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n    }));\n  }\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn('VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' + ' precedence over renderItem.');\n    }\n    if (ListItemComponent) {\n      /* $FlowFixMe[not-a-component] (>=0.108.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.108 was deployed. To\n       * see the error, delete this comment and run Flow. */\n      /* $FlowFixMe[incompatible-type-arg] (>=0.108.0 site=react_native_fb)\n       * This comment suppresses an error found when Flow v0.108 was deployed.\n       * To see the error, delete this comment and run Flow. */\n      return /*#__PURE__*/React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n    invariant(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');\n  }\n  render() {\n    var _this$props14 = this.props,\n      CellRendererComponent = _this$props14.CellRendererComponent,\n      ItemSeparatorComponent = _this$props14.ItemSeparatorComponent,\n      fillRateHelper = _this$props14.fillRateHelper,\n      horizontal = _this$props14.horizontal,\n      item = _this$props14.item,\n      index = _this$props14.index,\n      inversionStyle = _this$props14.inversionStyle,\n      parentProps = _this$props14.parentProps;\n    var renderItem = parentProps.renderItem,\n      getItemLayout = parentProps.getItemLayout,\n      ListItemComponent = parentProps.ListItemComponent;\n    var element = this._renderElement(renderItem, ListItemComponent, item, index);\n    var onLayout =\n    /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n     * suppresses an error found when Flow v0.68 was deployed. To see the\n     * error delete this comment and run Flow. */\n    getItemLayout && !parentProps.debug && !fillRateHelper.enabled() ? undefined : this.props.onLayout;\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    var itemSeparator = ItemSeparatorComponent && /*#__PURE__*/React.createElement(ItemSeparatorComponent, this.state.separatorProps);\n    var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n    var result = !CellRendererComponent ?\n    /*#__PURE__*/\n    /* $FlowFixMe[incompatible-type-arg] (>=0.89.0 site=react_native_fb) *\n      This comment suppresses an error found when Flow v0.89 was deployed. *\n      To see the error, delete this comment and run Flow. */\n    React.createElement(View, {\n      style: cellStyle,\n      onLayout: onLayout\n    }, element, itemSeparator) : /*#__PURE__*/React.createElement(CellRendererComponent, _extends({}, this.props, {\n      style: cellStyle,\n      onLayout: onLayout\n    }), element, itemSeparator);\n    return /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n      cellKey: this.props.cellKey\n    }, result);\n  }\n}\nfunction describeNestedLists(childList) {\n  var trace = 'VirtualizedList trace:\\n' + (\"  Child (\" + (childList.horizontal ? 'horizontal' : 'vertical') + \"):\\n\") + (\"    listKey: \" + childList.key + \"\\n\") + (\"    cellKey: \" + childList.cellKey);\n  var debugInfo = childList.parentDebugInfo;\n  while (debugInfo) {\n    trace += \"\\n  Parent (\" + (debugInfo.horizontal ? 'horizontal' : 'vertical') + \"):\\n\" + (\"    listKey: \" + debugInfo.listKey + \"\\n\") + (\"    cellKey: \" + debugInfo.cellKey);\n    debugInfo = debugInfo.parent;\n  }\n  return trace;\n}\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: 'scaleY(-1)'\n  },\n  horizontallyInverted: {\n    transform: 'scaleX(-1)'\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nexport default VirtualizedList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}